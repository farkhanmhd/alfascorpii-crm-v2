// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id         String   @id @default(uuid())
  dealer     String
  name       String
  lokasi     String
  phone      String @unique
  motor      String
  follow_up  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Staff {
  id         String   @id @default(uuid())
  username   String
  name       String
  email      String   @unique
  nip        String   @unique
  status     String
  role       String
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Dealer {
  id          String  @id @default(uuid())
  kode        String  @unique
  nama        String
  status      Status  @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Leasing {
  id          String @id @default(uuid())
  nama        String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Dpack_Model {
  id          String @id @default(uuid())
  model       String 
  catalog     String
  category    String
  color       String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Hari_Besar {
  id          String @id @default(uuid())
  hari_besar  String
  tanggal     String
  agama       String
  ucapan      String
  status      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Kerabat {
  id          String @id @default(uuid())
  kerabat     String
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Pekerjaan {
  id          String @id @default(uuid())
  pekerjaan   String
  kode        String @unique
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Pendidikan {
  id          String @id @default(uuid())
  pendidikan  String
  kode        String @unique
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Pengeluaran {
  id          String @id @default(uuid())
  batas_bawah Int
  batas_atas  Int
  detail      String
  kode        String @unique
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Penghasilan {
  id          String @id @default(uuid())
  batas_bawah Int
  batas_atas  Int
  detail      String
  kode        String @unique
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Hobi {
  id          String @id @default(uuid())
  hobi        String
  status      Status @default(SHOW)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Status_Rumah {
  id            String @id @default(uuid())
  status_rumah  String
  status        Status @default(SHOW)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Metode_FU {
  id            String @id @default(uuid())
  metode         String
  status        Status @default(SHOW)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Keterangan_FU {
  id            String @id @default(uuid())
  keterangan    String
  kategori_hasil String
  status        String
  tampil        Status @default(SHOW)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Keterangan_Hasil {
  id            String @id @default(uuid())
  keterangan_hasil    String
  status_fu      String
  status         Status @default(SHOW)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

enum Status {
  HIDE
  SHOW
}